# Generated by Django 4.1.3 on 2022-12-09 10:17

import PeopleSite.accounts.validators
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DdUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30, null=True, validators=[django.core.validators.MinLengthValidator(2), PeopleSite.accounts.validators.is_alphabetical])),
                ('last_name', models.CharField(max_length=30, null=True, validators=[django.core.validators.MinLengthValidator(2), PeopleSite.accounts.validators.is_alphabetical])),
                ('age', models.PositiveIntegerField(null=True, validators=[django.core.validators.MinValueValidator(18)])),
                ('height', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('weight', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('eyes_color', models.CharField(blank=True, choices=[('black', 'Black'), ('brown', 'Brown'), ('blue', 'Blue'), ('green', 'Green'), ('hazel', 'Hazel'), ('amber', 'Amber'), ('grey', 'Grey')], max_length=5, null=True)),
                ('hair_color', models.CharField(blank=True, choices=[('black', 'Black'), ('brown', 'Brown'), ('red', 'Red'), ('blond', 'Blond'), ('grey', 'Grey'), ('white', 'White')], max_length=5, null=True)),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('do_not_show', 'Do not show')], max_length=11, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
